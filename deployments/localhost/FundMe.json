{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x1bc7d060f42da4a204967ff193e25f451b6270d68c7046b6b5218fa12bb4ff9d",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1046267",
    "logsBloom": "0x
    "blockHash": "0xd0cbee6b2a62403a1ec2b825c3e4bc98570a0b0d80eefabb288d442b6cb86512",
    "transactionHash": "0x1bc7d060f42da4a204967ff193e25f451b6270d68c7046b6b5218fa12bb4ff9d",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1046267",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "c6e3f4c9e0ee26519429a91b52606172",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public onlyOwner {\\n        address[] memory ffunders = funders;\\n        // mappings can't be in memory, sorry!\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < ffunders.length;\\n            funderIndex++\\n        ) {\\n            address funder = ffunders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // payable(msg.sender).transfer(address(this).balance);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\\\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback()\\n    //     /   \\\\\\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xc9211ea1f2b34d4d7b198f9b4b07983a02f701fd6facc7f411bb3cf1c2d44e41\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        // Goerli ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x6a70b7d94b981324f8bf487e9ebcba53bd4ccfa9447eeac34a7430914e97ef02\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200131538038062001315833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c61118f620001866000396000818161033d015281816105f2015281816107e80152610880015261118f6000f3fe60806040526004361061008a5760003560e01c80639e87a5cd116100595780639e87a5cd1461014d578063b60d428814610178578063be2693f014610182578063dba6335f14610199578063dc0d3dff146101c457610099565b80633ccfd60b146100a35780633e47d6f3146100ba5780636b69a592146100f7578063741bef1a1461012257610099565b3661009957610097610201565b005b6100a1610201565b005b3480156100af57600080fd5b506100b861033b565b005b3480156100c657600080fd5b506100e160048036038101906100dc9190610ac7565b61057b565b6040516100ee9190610b0d565b60405180910390f35b34801561010357600080fd5b5061010c610593565b6040516101199190610b0d565b60405180910390f35b34801561012e57600080fd5b506101376105a0565b6040516101449190610b87565b60405180910390f35b34801561015957600080fd5b506101626105c6565b60405161016f9190610b87565b60405180910390f35b610180610201565b005b34801561018e57600080fd5b506101976105f0565b005b3480156101a557600080fd5b506101ae61087e565b6040516101bb9190610bb1565b60405180910390f35b3480156101d057600080fd5b506101eb60048036038101906101e69190610bf8565b6108a2565b6040516101f89190610bb1565b60405180910390f35b6802b5e3af16b1880000610240600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108e190919063ffffffff16565b1015610281576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027890610c82565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102cf9190610cd1565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c0576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561046b576000600182815481106103e6576103e5610d27565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046390610d56565b9150506103c3565b50600067ffffffffffffffff81111561048757610486610d9f565b5b6040519080825280602002602001820160405280156104b55781602001602082028036833780820191505090505b50600190805190602001906104cb9291906109bd565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104f290610dff565b60006040518083038185875af1925050503d806000811461052f576040519150601f19603f3d011682016040523d82523d6000602084013e610534565b606091505b5050905080610578576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056f90610e60565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610675576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106f957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106af575b5050505050905060005b815181101561078357600082828151811061072157610720610d27565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061077b90610d56565b915050610703565b50600067ffffffffffffffff81111561079f5761079e610d9f565b5b6040519080825280602002602001820160405280156107cd5781602001602082028036833780820191505090505b50600190805190602001906107e39291906109bd565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161082a90610dff565b60006040518083038185875af1925050503d8060008114610867576040519150601f19603f3d011682016040523d82523d6000602084013e61086c565b606091505b505090508061087a57600080fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600181815481106108b257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806108ed8361091d565b90506000670de0b6b3a764000085836109069190610e80565b6109109190610f09565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561096657600080fd5b505afa15801561097a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099e9190610fc7565b5050509150506402540be400816109b59190611042565b915050919050565b828054828255906000526020600020908101928215610a36579160200282015b82811115610a355782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109dd565b5b509050610a439190610a47565b5090565b5b80821115610a60576000816000905550600101610a48565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9482610a69565b9050919050565b610aa481610a89565b8114610aaf57600080fd5b50565b600081359050610ac181610a9b565b92915050565b600060208284031215610add57610adc610a64565b5b6000610aeb84828501610ab2565b91505092915050565b6000819050919050565b610b0781610af4565b82525050565b6000602082019050610b226000830184610afe565b92915050565b6000819050919050565b6000610b4d610b48610b4384610a69565b610b28565b610a69565b9050919050565b6000610b5f82610b32565b9050919050565b6000610b7182610b54565b9050919050565b610b8181610b66565b82525050565b6000602082019050610b9c6000830184610b78565b92915050565b610bab81610a89565b82525050565b6000602082019050610bc66000830184610ba2565b92915050565b610bd581610af4565b8114610be057600080fd5b50565b600081359050610bf281610bcc565b92915050565b600060208284031215610c0e57610c0d610a64565b5b6000610c1c84828501610be3565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c6c601b83610c25565b9150610c7782610c36565b602082019050919050565b60006020820190508181036000830152610c9b81610c5f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cdc82610af4565b9150610ce783610af4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d1c57610d1b610ca2565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d6182610af4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d9457610d93610ca2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610de9600083610dce565b9150610df482610dd9565b600082019050919050565b6000610e0a82610ddc565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e4a600b83610c25565b9150610e5582610e14565b602082019050919050565b60006020820190508181036000830152610e7981610e3d565b9050919050565b6000610e8b82610af4565b9150610e9683610af4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ecf57610ece610ca2565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f1482610af4565b9150610f1f83610af4565b925082610f2f57610f2e610eda565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f5981610f3a565b8114610f6457600080fd5b50565b600081519050610f7681610f50565b92915050565b6000819050919050565b610f8f81610f7c565b8114610f9a57600080fd5b50565b600081519050610fac81610f86565b92915050565b600081519050610fc181610bcc565b92915050565b600080600080600060a08688031215610fe357610fe2610a64565b5b6000610ff188828901610f67565b955050602061100288828901610f9d565b945050604061101388828901610fb2565b935050606061102488828901610fb2565b925050608061103588828901610f67565b9150509295509295909350565b600061104d82610f7c565b915061105883610f7c565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561109757611096610ca2565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110d4576110d3610ca2565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561111157611110610ca2565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561114e5761114d610ca2565b5b82820290509291505056fea2646970667358221220b86d8d93804c87f79f50afffb390b381e71449981c35aa7e7f28a9fe43583bd064736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c80639e87a5cd116100595780639e87a5cd1461014d578063b60d428814610178578063be2693f014610182578063dba6335f14610199578063dc0d3dff146101c457610099565b80633ccfd60b146100a35780633e47d6f3146100ba5780636b69a592146100f7578063741bef1a1461012257610099565b3661009957610097610201565b005b6100a1610201565b005b3480156100af57600080fd5b506100b861033b565b005b3480156100c657600080fd5b506100e160048036038101906100dc9190610ac7565b61057b565b6040516100ee9190610b0d565b60405180910390f35b34801561010357600080fd5b5061010c610593565b6040516101199190610b0d565b60405180910390f35b34801561012e57600080fd5b506101376105a0565b6040516101449190610b87565b60405180910390f35b34801561015957600080fd5b506101626105c6565b60405161016f9190610b87565b60405180910390f35b610180610201565b005b34801561018e57600080fd5b506101976105f0565b005b3480156101a557600080fd5b506101ae61087e565b6040516101bb9190610bb1565b60405180910390f35b3480156101d057600080fd5b506101eb60048036038101906101e69190610bf8565b6108a2565b6040516101f89190610bb1565b60405180910390f35b6802b5e3af16b1880000610240600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108e190919063ffffffff16565b1015610281576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027890610c82565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102cf9190610cd1565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c0576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561046b576000600182815481106103e6576103e5610d27565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046390610d56565b9150506103c3565b50600067ffffffffffffffff81111561048757610486610d9f565b5b6040519080825280602002602001820160405280156104b55781602001602082028036833780820191505090505b50600190805190602001906104cb9291906109bd565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104f290610dff565b60006040518083038185875af1925050503d806000811461052f576040519150601f19603f3d011682016040523d82523d6000602084013e610534565b606091505b5050905080610578576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056f90610e60565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610675576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106f957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106af575b5050505050905060005b815181101561078357600082828151811061072157610720610d27565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061077b90610d56565b915050610703565b50600067ffffffffffffffff81111561079f5761079e610d9f565b5b6040519080825280602002602001820160405280156107cd5781602001602082028036833780820191505090505b50600190805190602001906107e39291906109bd565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161082a90610dff565b60006040518083038185875af1925050503d8060008114610867576040519150601f19603f3d011682016040523d82523d6000602084013e61086c565b606091505b505090508061087a57600080fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600181815481106108b257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806108ed8361091d565b90506000670de0b6b3a764000085836109069190610e80565b6109109190610f09565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561096657600080fd5b505afa15801561097a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099e9190610fc7565b5050509150506402540be400816109b59190611042565b915050919050565b828054828255906000526020600020908101928215610a36579160200282015b82811115610a355782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109dd565b5b509050610a439190610a47565b5090565b5b80821115610a60576000816000905550600101610a48565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9482610a69565b9050919050565b610aa481610a89565b8114610aaf57600080fd5b50565b600081359050610ac181610a9b565b92915050565b600060208284031215610add57610adc610a64565b5b6000610aeb84828501610ab2565b91505092915050565b6000819050919050565b610b0781610af4565b82525050565b6000602082019050610b226000830184610afe565b92915050565b6000819050919050565b6000610b4d610b48610b4384610a69565b610b28565b610a69565b9050919050565b6000610b5f82610b32565b9050919050565b6000610b7182610b54565b9050919050565b610b8181610b66565b82525050565b6000602082019050610b9c6000830184610b78565b92915050565b610bab81610a89565b82525050565b6000602082019050610bc66000830184610ba2565b92915050565b610bd581610af4565b8114610be057600080fd5b50565b600081359050610bf281610bcc565b92915050565b600060208284031215610c0e57610c0d610a64565b5b6000610c1c84828501610be3565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c6c601b83610c25565b9150610c7782610c36565b602082019050919050565b60006020820190508181036000830152610c9b81610c5f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cdc82610af4565b9150610ce783610af4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d1c57610d1b610ca2565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d6182610af4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d9457610d93610ca2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610de9600083610dce565b9150610df482610dd9565b600082019050919050565b6000610e0a82610ddc565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e4a600b83610c25565b9150610e5582610e14565b602082019050919050565b60006020820190508181036000830152610e7981610e3d565b9050919050565b6000610e8b82610af4565b9150610e9683610af4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ecf57610ece610ca2565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f1482610af4565b9150610f1f83610af4565b925082610f2f57610f2e610eda565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f5981610f3a565b8114610f6457600080fd5b50565b600081519050610f7681610f50565b92915050565b6000819050919050565b610f8f81610f7c565b8114610f9a57600080fd5b50565b600081519050610fac81610f86565b92915050565b600081519050610fc181610bcc565b92915050565b600080600080600060a08688031215610fe357610fe2610a64565b5b6000610ff188828901610f67565b955050602061100288828901610f9d565b945050604061101388828901610fb2565b935050606061102488828901610fb2565b925050608061103588828901610f67565b9150509295509295909350565b600061104d82610f7c565b915061105883610f7c565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561109757611096610ca2565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110d4576110d3610ca2565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561111157611110610ca2565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561114e5761114d610ca2565b5b82820290509291505056fea2646970667358221220b86d8d93804c87f79f50afffb390b381e71449981c35aa7e7f28a9fe43583bd064736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}